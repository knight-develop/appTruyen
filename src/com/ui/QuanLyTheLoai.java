/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ui;

import com.ui.mainForm;
import com.dao.theLoaiDAO;
import com.models.tacGia;
import com.models.theLoai;
import com.utils.MsgBox;
import java.awt.Dimension;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class QuanLyTheLoai extends javax.swing.JInternalFrame {
    theLoaiDAO dao = new theLoaiDAO();
    int row;
    List<theLoai> list = new ArrayList<>();
    /**
     * Creates new form QuanLyTheLoai
     */
    public QuanLyTheLoai() {
        initComponents();
        init();
    }
    private void fillTable(){
        DefaultTableModel model = (DefaultTableModel) tblTL.getModel();
        model.setRowCount(0);           
            for(theLoai tl : list){
                model.addRow(new Object[]{
                    tl.getId(),tl.getTenTL()
                });
            }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbltitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTL = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setClosable(true);

        lbltitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbltitle.setForeground(new java.awt.Color(255, 51, 51));
        lbltitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltitle.setText("Quản Lý Thể Loại");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Tên thể loại");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách"));

        tblTL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Tên thể loại"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTLMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTL);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/image/Add.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/image/Edit.png"))); // NOI18N
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/image/Delete.png"))); // NOI18N
        btnDelete.setText("Xoá");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(lbltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbltitle, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if(checkValidate()) return;
        insert();
    }//GEN-LAST:event_btnAddActionPerformed

    private void tblTLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTLMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            this.row = tblTL.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblTLMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if(checkValidate()) return;
        update();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbltitle;
    private javax.swing.JTable tblTL;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
    private theLoai getModel(){
        theLoai tL = new theLoai();
        tL.setTenTL(txtName.getText());
        return tL;
    }
    private void setModel(theLoai tL){
        txtName.setText(tL.getTenTL());
    }
    private void updateStatus() {
        boolean edit = (this.row >= 0);
        btnAdd.setEnabled(!edit);
        btnUpdate.setEnabled(edit);
        btnDelete.setEnabled(edit);
        
    }
    private void init() {
        JDesktopPane Desktop1 = mainForm.Desktop1;
        Dimension size1 = Desktop1.getSize();
        Dimension size = this.getSize();
        this.setLocation((size1.width - size.width) / 2, (size1.height - size.height) / 2);
        
        try {
            list = dao.selectAll();
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyTheLoai.class.getName()).log(Level.SEVERE, null, ex);
        }
        fillTable();
        this.row = -1;
        updateStatus();
    }
    private boolean checkValidate(){
        if(txtName.getText().isEmpty()){
            MsgBox.alert(this, "Chưa nhập tên thể loại");
            return true;
        }
        for(theLoai tl:list){
            if(txtName.getText().equals(tl.getTenTL())){
                MsgBox.alert(this, "tên thể loại đã tồn tại");
                return true;
            }
        }
        return false;
    }
    private void edit() {
        int id = (int) tblTL.getValueAt(row, 0);
        try {
            theLoai tL = dao.selectByID(id);
            this.setModel(tL);
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyTheLoai.class.getName()).log(Level.SEVERE, null, ex);
        }
        updateStatus();
    }
    private void insert(){
        theLoai tL = getModel();
        try {
            dao.insert(tL);
            MsgBox.alert(this, "Thêm thành công");
            fillTable();
            clearForm();
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyTheLoai.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void update() {
        theLoai tl = getTacGia();
        dao.update(tl);
        fillTable();
        MsgBox.alert(this, "Update thành công!");
        clearForm();
    }
    private theLoai getTacGia(){      
        int id =  (int) tblTL.getValueAt(row, 0);
        try {
            theLoai tL = dao.selectByID(id);
            tL.setTenTL(txtName.getText());
            return tL;
        } catch (SQLException ex) {
            throw new RuntimeException();
        }        
        
    }
    private void delete(){
        int id =  tblTL.getRowCount()+1;
        try {
            theLoai tL = dao.selectByID(id);
            if(MsgBox.comfirm(this, "Bạn có muốn xoá?")){
                dao.delete(tL);
                MsgBox.alert(this, "Xoá thành công!");
            }           
        } catch (SQLException ex) {
            Logger.getLogger(QuanLyTheLoai.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private void clearForm(){
        txtName.setText("");
        this.row = -1;
    }
}
